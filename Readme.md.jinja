# Awesome Neural Cellular Automata
A list of paper and resources regarding Neural Cellular Automata. Last updated: {{ date[:10] }}.

> [!NOTE]
> This repository has been researched, compiled, and maintained to the best of my knowledge and ability.
> While I strive for accuracy and completeness, there may be mistakes or updates needed over time.
> I welcome suggestions, improvements, and contributions from the community.
> Please feel free to open an issue or submit a pull request if you have any recommendations or changes.
>
> To contribute, please update the `papers.yaml` file.
> Direct updates to `Readme.md` will be overwritten in the next commit.
>
> Thank you for your support and collaboration!

## Seminal Paper introducing Neural Cellular Automata
<table>
<tr>
<td width="150px">
<a href="https://colab.research.google.com/github/google-research/self-organising-systems/blob/master/notebooks/growing_ca.ipynb" target="_blank">
    <img src="assets/thumbnails/2020-02-11growingneu_mordvintsev.jpg" width="140px">
</a>
</td>
<td>

### Growing Neural Cellular Automata
Published on **2020-02-11** by

Alexander **Mordvintsev**, Ettore **Randazzo**, Eyvind **Niklasson**, Michael **Levin**

[Code](https://colab.research.google.com/github/google-research/self-organising-systems/blob/master/notebooks/growing_ca.ipynb) | [Project Page](https://distill.pub/2020/growing-ca/)

<details>
<summary><b>Abstract</b></summary>
Training an end-to-end differentiable, self-organising cellular automata model of morphogenesis, able to both grow and regenerate specific patterns.
</details>

</td>
</tr>


</table>

## Implementations
- [Original reference](https://colab.research.google.com/github/google-research/self-organising-systems/blob/master/notebooks/growing_ca.ipynb)
- [CAX](https://github.com/maxencefaldor/cax) - Cellular Automata in JAX

## List of Papers
{% for paper in papers | reverse %}
{# Update year if needed #}
{% if loop.changed(paper["year"][:4]) %}
{% if not loop.first %}
</table>
{% endif %}
### {{ paper["year"][:4] }}
<table>
{% endif %}
{# Create paper entry #}
{%- set pdf_link = paper["urls"]["arxiv"].replace("/abs/", "/pdf/") if "arxiv" in paper["urls"] else paper["urls"].values() | select("string") | first -%}
<tr>
<td width="150px">
<a href="{{ pdf_link }}" target="_blank">
    <img src="{{ paper['thumbnail'] }}" width="140px">
</a>
</td>
<td>

#### {{ paper["title"] }}
Published on **{{ paper["year"] }}** by

{% for author in paper["authors"] %}{{ author[0] }} **{{ author[1] }}**{% if not loop.last %}, {% endif %}{% endfor %}

{% set links = [] %}
{%- for key, url in paper["urls"].items() if url -%}
    {%- set _ = links.append("[" ~ key.replace('_', ' ').title() ~ "](" ~ url ~ ")") -%}
{%- endfor -%}
{{ links | join(" | ") }}

<details>
<summary><b>Abstract</b></summary>
{{ paper["abstract"] }}
</details>

</td>
</tr>

{% endfor %}
</table>

